#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;     // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T                        &mmv MOVE_UP                &kp Y        &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &mmv MOVE_LEFT  &mkp LCLK  &mmv MOVE_RIGHT  &kp H        &kp J  &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &mkp LCLK       &mmv MOVE_DOWN              &kp N        &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LALT  &mo 1  &kp SPACE                                                &kp SPACE    &mo 2  &kp LGUI
            >;
             sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "SYMBOL";
            bindings = <
&kp TILDE &kp EXCL  &kp AT    &kp HASH    &kp DLLR     &kp PRCNT                        &mmv MOVE_UP                     &kp CARET    &kp AMPS    &kp ASTRK  &kp LPAR   &kp RPAR   &kp BSPC
&trans    &kp ESC   &kp ESC   &kp ESC     &kp ESC      &kp LG(LS(S))    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS    &kp PLUS    &kp EQUAL  &kp LBKT   &kp RBKT   &kp GRAVE
&trans    &none     &none     &none       &none        &none            &kp C_MUTE      &mmv MOVE_DOWN                   &kp UNDER    &kp BSLH    &kp PIPE   &kp LBRC   &kp RBRC   &trans
                              &trans      &trans       &trans                                                            &kp SPACE    &trans      &trans
            >;             
            sensor-bindings = <&scroll_encoder>;
            /*LG(LS(S))  := Win(= LGUI) + Shift(= LSHIFT) + S */
        };

        raise_layer {
            display-name = "NUMBER";
            bindings = <

&kp GRAVE  &kp N1  &kp N2     &kp N3     &kp N4     &kp N5                       &mmv MOVE_UP                 &kp N6     &kp N7     &kp N8    &kp N9       &kp N0    &kp BSPC
&trans     &none   &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4     &mmv MOVE_LEFT  &mkp LCLK   &mmv MOVE_RIGHT  &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT    &none     &kp SQT
&trans     &none   &none      &none      &none      &mkp MB5     &mkp LCLK       &mmv MOVE_DOWN               &kp HOME   &kp END    &kp PG_UP &kp PG_DN    &trans    &trans
                              &trans     &trans     &kp SPACE                                                 &kp SPACE  &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&none           &kp F1        &kp F2        &kp F3         &kp F4          &kp F5                         &mmv MOVE_UP                  &kp F6          &kp F7            &kp F8           &kp F9       &kp F10    &none
&bt BT_CLR_ALL  &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3   &mmv MOVE_LEFT  &mkp LCLK  &mmv MOVE_RIGHT    &rgb_ug RGB_BRI &rgb_ug RGB_BRD   &none            &none        &none      &kp RCTRL
&none           &out OUT_BLE  &out OUT_USB  &studio_unlock &sys_reset      &bootloader    &none           &mmv MOVE_DOWN                &rgb_ug RGB_ON  &rgb_ug RGB_OFF   &rgb_ug RGB_EFF  &none        &none      &kp RSHFT
                                            &trans       &trans     &trans                                                              &trans          &trans            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };

    combos {
        compatible = "zmk,combos";
        #address-cells = <1>;
        #size-cells    = <0>;

        /* MO(1) + MO(2)  →  MO(3)   (두 키 다 떼면 자동으로 레이어 3 해제) */
        combo_layer3 {
            timeout-ms = <40>;                 /* 동시에 눌렀다고 간주할 최대 지연 */
            key-positions = < 43 46 >;         /* ← ❶ 각 키의 row/col 인덱스 입력 */
            bindings = <&mo 3>;                /* ❷ 원하는 목적 레이어 번호 */
        };
    };
};
